{"version":3,"file":"chakra-lib.cjs.development.js","sources":["../src/FormLabel/FormLabel.tsx","../src/Select/Select.tsx"],"sourcesContent":["import React from 'react';\nimport { FormLabel as FormLabelChakra } from '@chakra-ui/react';\n\nexport const FormLabel = ({ children, name, ...props }: any) => {\n  return (\n    <FormLabelChakra\n      htmlFor={name}\n      fontSize=\"0.84rem\"\n      width=\"100%\"\n      mb=\"6px\"\n      {...props}\n    >\n      {children}\n    </FormLabelChakra>\n  );\n};\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport {Flex, FormControl, Icon, Spinner, useColorModeValue,} from '@chakra-ui/react';\n\nimport {ChevronDownIcon, SmallCloseIcon} from '@chakra-ui/icons';\nimport {FormLabel} from '../FormLabel';\n\ninterface SelectProps {\n    name?: string;\n    value?: string;\n    options?: any[];\n    isMulti?: boolean;\n    isInvalid?: boolean;\n    leftAddon?: React.ReactNode\n    label?: string\n}\n\nexport const Select = React.forwardRef<any, SelectProps>((\n    {\n        name,\n        value,\n        options = [],\n        isMulti = false,\n        isInvalid = false,\n        leftAddon = undefined,\n        label = '',\n        ...props\n    }, ref) => {\n\n    const themeBgControl = useColorModeValue('#ffffff', 'inherit');\n    const themeColorSingleValue = useColorModeValue('#000000', '#ffffff');\n    const themeControlBorderColor = useColorModeValue('#E2E8F0', 'rgba(255, 255, 255, 0.16)');\n    const themeControlBorderColorFocused = useColorModeValue('#3182ce', '#63b3ed');\n    const themeControlBoxShadowFocused = useColorModeValue('0 0 0 1px #3182ce', '0 0 0 1px #63b3ed');\n    const themeControlBorderColorHoverFocused = useColorModeValue('#3182ce', '#63b3ed');\n    const themeControlBorderColorHover = useColorModeValue('#CBD5E0', 'rgba(255, 255, 255, 0.24)');\n    const themeBgMenuList = useColorModeValue('#ffffff', '#2D3748');\n    const themeBgOptionSelected = useColorModeValue('#3182ce', '#90cdf4');\n    const themeBgOptionHoverSelected = useColorModeValue('#3182ce', '#90cdf4');\n    const themeBgOptionHover = useColorModeValue('#EDF2F6', 'rgba(255, 255, 255, 0.06)');\n    const themeColorOptionActiveSelected = useColorModeValue('#000000', '#000000');\n    const themeColorOptionActive = useColorModeValue('#3182ce', 'rgba(255, 255, 255, 0.80)');\n    const themeColorOption = useColorModeValue('#ffffff', '#000000');\n    const themeColorOptionSelected = useColorModeValue('#000000', '#ffffff');\n    const themePlaceholderColor = useColorModeValue('#A0AEC0', 'rgba(255, 255, 255, 0.24)');\n    const themeColorNoOptionsMessage = useColorModeValue('#A0AEC0', 'rgba(255, 255, 255, 0.24)');\n    const themeBgMultiValue = useColorModeValue('#EDF2F7', '#2D3748');\n    const themeColorMultiValueLabel = useColorModeValue('#000000', '#fffff');\n    const themeColorInput = useColorModeValue('#000000', '#ffffff');\n    const themeColorInvalid = useColorModeValue('#e53e3e', '#FC8181');\n    const themeShadowInvalid = useColorModeValue('0 0 0 1px #e53e3e', '0 0 0 1px #FC8181');\n\n    const indicatorSeparatorStyle = {\n        alignSelf: 'stretch',\n        backgroundColor: '#fff',\n        marginBottom: 8,\n        marginTop: 8,\n        width: 0\n    };\n\n    const IndicatorSeparator = ({innerProps}: any) => {\n        return (\n            <span style={indicatorSeparatorStyle} {...innerProps} />\n        );\n    };\n\n    const LoadingIndicator = () => {\n        return (\n            <Spinner color=\"blue.500\" size=\"xs\"/>\n        );\n    };\n\n    const DropdownIndicator = ({innerProps}: any) => {\n        return (\n            <Flex alignItems=\"center\" alignContent=\"center\" {...innerProps}>\n                <Icon as={ChevronDownIcon} fontSize=\"1.5rem\"/>\n            </Flex>\n        );\n    };\n\n    const ClearIndicator = ({innerProps}: any) => {\n        return (\n            <Flex alignItems=\"center\" alignContent=\"center\" width=\"20px\" {...innerProps}>\n                <Icon as={SmallCloseIcon} fontSize=\"1.1rem\"/>\n            </Flex>\n        );\n    };\n\n    const LoadingMessage = (config: any) => (\n        <div {...config.innerProps} style={config.getStyles('loadingMessage', config)}>\n            Загрузка...\n        </div>\n    );\n\n    const customStyles = {\n        control: (provided: any, state: any) => {\n            const {isFocused} = state;\n            const {isSearchable} = state.selectProps;\n            return (\n                {\n                    ...provided,\n                    borderColor: isInvalid ? themeColorInvalid : isFocused ? themeControlBorderColorFocused : themeControlBorderColor,\n                    boxShadow: isInvalid ? themeShadowInvalid : isFocused && themeControlBoxShadowFocused,\n                    padding: isSearchable ? '0.063rem 0.5rem 0.063rem 0.34rem' : '0.313rem 0.5rem 0.313rem 0.3rem',\n                    backgroundColor: themeBgControl,\n                    transition: '0.3s',\n                    borderRadius: '0.375rem',\n                    '&:hover': {\n                        borderColor: isInvalid ? themeColorInvalid : (isFocused ? themeControlBorderColorHoverFocused : themeControlBorderColorHover),\n                        boxShadow: isInvalid && '0 0 0 1px #fffff'\n                    }\n                }\n            )\n        },\n        menu: (provided: any) => ({\n            ...provided,\n            backgroundColor: 'inherit',\n            zIndex: 999,\n            borderWidth: '1px',\n            //borderColor: '#E2E8F0',\n            borderRadius: '0.375rem',\n            boxShadow: '0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06)'\n        }),\n        menuList: (provided: any) => ({\n            ...provided,\n            backgroundColor: themeBgMenuList,\n            transition: 'background-color 220ms,color 220ms',\n            borderRadius: '0.25rem'\n        }),\n        option: (provided: any, state: any) => {\n            const {isSelected} = state;\n            return (\n                {\n                    ...provided,\n                    backgroundColor: isSelected && themeBgOptionSelected,\n                    color: isSelected ? themeColorOption : themeColorOptionSelected,\n                    ':active': {\n                        color: isSelected ? themeColorOptionActiveSelected : themeColorOptionActive\n                    },\n                    ':hover': {\n                        ...provided[':hover'],\n                        backgroundColor: isSelected ? themeBgOptionHoverSelected : themeBgOptionHover\n                    }\n                }\n            )\n        },\n        multiValue: (provided: any) => ({\n            ...provided,\n            backgroundColor: themeBgMultiValue\n        }),\n        multiValueLabel: (base: any) => ({\n            ...base,\n            color: themeColorMultiValueLabel\n        }),\n        dropdownIndicator: (provided: any) => ({\n            ...provided,\n            color: '#1A202C',\n            ':hover': '#1A202C'\n        }),\n        clearIndicator: (provided: any) => ({\n            ...provided,\n            color: '#1A202C',\n            ':hover': '#1A202C'\n        }),\n        singleValue: (provided: any, state: any) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 300ms';\n\n            return {...provided, opacity, transition, color: themeColorSingleValue};\n        },\n        placeholder: (base: any) => ({\n            ...base,\n            fontSize: '1em',\n            color: themePlaceholderColor\n        }),\n        noOptionsMessage: (base: any) => {\n            return {\n                ...base,\n                color: themeColorNoOptionsMessage\n            }\n        },\n        input: (base: any) => ({\n            ...base,\n            fontSize: '1em',\n            color: themeColorInput\n        }),\n    }\n    const customTheme = (theme: any) => ({\n        ...theme,\n        borderRadius: 4\n    });\n\n    const getValue = () => {\n        if (!isMulti) {\n            return options.find((item: any) => item.value === value)\n        } else {\n            return value\n        }\n    }\n\n    return (\n        <FormControl isInvalid={isInvalid}>\n            {label && (\n                <FormLabel>\n                    {label}\n                </FormLabel>\n            )}\n            <ReactSelect\n                ref={ref}\n                options={options}\n                name={name}\n                isMulti={isMulti}\n                styles={customStyles}\n                components={{IndicatorSeparator, LoadingIndicator, LoadingMessage, DropdownIndicator, ClearIndicator}}\n                noOptionsMessage={() => 'Нет опций'}\n                theme={customTheme}\n                value={getValue()}\n                {...props}\n            />\n        </FormControl>\n    );\n});\n"],"names":["FormLabel","children","name","props","React","FormLabelChakra","htmlFor","fontSize","width","mb","Select","forwardRef","ref","value","options","isMulti","isInvalid","label","themeBgControl","useColorModeValue","themeColorSingleValue","themeControlBorderColor","themeControlBorderColorFocused","themeControlBoxShadowFocused","themeControlBorderColorHoverFocused","themeControlBorderColorHover","themeBgMenuList","themeBgOptionSelected","themeBgOptionHoverSelected","themeBgOptionHover","themeColorOptionActiveSelected","themeColorOptionActive","themeColorOption","themeColorOptionSelected","themePlaceholderColor","themeColorNoOptionsMessage","themeBgMultiValue","themeColorMultiValueLabel","themeColorInput","themeColorInvalid","themeShadowInvalid","indicatorSeparatorStyle","alignSelf","backgroundColor","marginBottom","marginTop","IndicatorSeparator","innerProps","style","LoadingIndicator","Spinner","color","size","DropdownIndicator","Flex","alignItems","alignContent","Icon","as","ChevronDownIcon","ClearIndicator","SmallCloseIcon","LoadingMessage","config","getStyles","customStyles","control","provided","state","isFocused","isSearchable","selectProps","borderColor","boxShadow","padding","transition","borderRadius","menu","zIndex","borderWidth","menuList","option","isSelected","multiValue","multiValueLabel","base","dropdownIndicator","clearIndicator","singleValue","opacity","isDisabled","placeholder","noOptionsMessage","input","customTheme","theme","getValue","find","item","FormControl","ReactSelect","styles","components"],"mappings":"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"}